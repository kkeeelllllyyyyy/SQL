# For this project, I downloaded Spotify data from Kaggle
# I then created a table to insert Spotify data into
# Finally, I performed analytics on the data using SQL 

CREATE TABLE BIT_DB.Spotifydata 

(id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL)
;

#I then downloaded Spotify data .csv and imported it into my table
#Next, I explored this data

#I First determined what the 15 most popular tracks were

SELECT popularity, track_name
FROM BIT_DB.Spotifydata 
ORDER BY popularity desc 
LIMIT 15
;

#I then used this to aggregate the average tempo of the top 15 most popular tracks on spotify using a sub-query

SELECT avg(tempo)
FROM BIT_DB.Spotifydata
WHERE popularity 
IN (select popularity from BIT_DB.Spotifydata order by popularity desc limit 15)
;

#Finally, I displayed each artist along with the danceability score of their most danceable song

SELECT artist_name, max(danceability)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY artist_name desc
;
